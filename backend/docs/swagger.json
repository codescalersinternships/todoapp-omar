{
    "swagger": "2.0",
    "info": {
        "description": "A Todoapp API in Go using Gin framework and sqlite3",
        "title": "Todoapp API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/task": {
            "get": {
                "description": "Retrieve a list of tasks from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.multipleTaskResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/app.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new task to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Add new task",
                "parameters": [
                    {
                        "description": "New task object",
                        "name": "tags",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.taskResponse"
                        }
                    },
                    "400": {
                        "description": "failed to read task data",
                        "schema": {
                            "$ref": "#/definitions/app.errorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/app.errorResponse"
                        }
                    }
                }
            }
        },
        "/task/{id}": {
            "put": {
                "description": "Edit an existing task in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Edit task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Edited task object",
                        "name": "tags",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.taskResponse"
                        }
                    },
                    "400": {
                        "description": "failed to read task data",
                        "schema": {
                            "$ref": "#/definitions/app.errorResponse"
                        }
                    },
                    "404": {
                        "description": "task not found",
                        "schema": {
                            "$ref": "#/definitions/app.errorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/app.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing task from the database.",
                "tags": [
                    "tasks"
                ],
                "summary": "Delete task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "task not found",
                        "schema": {
                            "$ref": "#/definitions/app.errorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/app.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.errorResponse": {
            "type": "object",
            "properties": {
                "err": {
                    "type": "string"
                }
            }
        },
        "app.multipleTaskResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Task"
                    }
                }
            }
        },
        "app.taskResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                },
                "task": {
                    "$ref": "#/definitions/models.Task"
                }
            }
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_completed": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}